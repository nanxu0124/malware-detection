import sys
import os
current_dir = os.path.dirname(__file__)
project_dir = os.path.abspath(os.path.join(current_dir, '../..'))
sys.path.append(project_dir)

import pickle
from models import *
import torch.nn as nn
import numpy as np
import random

from torch.utils.data import Dataset, DataLoader
from data.ali_data.ali_dataset import PLTDataset, collate_fn_vocab
from utils.utils import device, setup_seed

def SetSeed():
    # 设置随机种子
    setup_seed(int(config['data']['seed']))
    torch_state_seed_value = torch.initial_seed()
    print("Torch Random Seed:", torch_state_seed_value)

    rng_state = np.random.get_state()
    rng_state_seed_value = rng_state[1][0]
    print("NumPy Random Seed:", rng_state_seed_value)

    random_state = random.getstate()
    random_state_seed_value = random_state[1][0]
    print("Python Random Seed:", random_state_seed_value)


t0_dataset = PLTDataset(train=True)
t0_dataloader = DataLoader(t0_dataset, batch_size=10, 
                                shuffle=False, collate_fn=collate_fn_vocab, drop_last=False)
t1_dataset = PLTDataset(train=False)
t1_dataloader = DataLoader(t1_dataset, batch_size=10, 
                                shuffle=False, collate_fn=collate_fn_vocab, drop_last=False)

for file_id, api, api_counts, remove_dup, labels in t0_dataloader:

    remove_dup = remove_dup.to(device())
    net = NET().to(device())
    net.load_state_dict(torch.load(
        os.path.join(current_dir, 
        os.path.join("model_file",
        os.path.join( "6",
        os.path.join("2023-12-29_09-24-56_0.9367", "NET_model_state_dict.pkl"))))))

    mu = net(remove_dup)

    with open('./t0.pkl', 'wb') as file:
        pickle.dump(mu, file)



for file_id, api, api_counts, remove_dup, labels in t1_dataloader:

    remove_dup = remove_dup.to(device())
    net = NET().to(device())
    net.load_state_dict(torch.load(
        os.path.join(current_dir, 
        os.path.join("model_file",
        os.path.join( "6",
        os.path.join("2023-12-29_09-24-56_0.9367", "NET_model_state_dict.pkl"))))))

    mu = net(remove_dup)

    with open('./t1.pkl', 'wb') as file:
        pickle.dump(mu, file)
