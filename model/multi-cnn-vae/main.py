import sys
import os
current_dir = os.path.dirname(__file__)
project_dir = os.path.abspath(os.path.join(current_dir, '../..'))
sys.path.append(project_dir)

import re
import torch
import pickle

import random
import numpy as np

from models import *
from train import *
import configparser
import pandas as pd
import torch.nn as nn

from data.ali_data.ali_dataset import ALiDataset, collate_fn_vocab
from utils.utils import device, create_folder, save_loss, model_info_save, plt_curve, setup_seed

from torch.optim import Adam
from torch.utils.data import Dataset, DataLoader


# 创建一个配置解析器对象
config = configparser.ConfigParser()
# 读取INI文件
config.read(os.path.join(project_dir, os.path.join("config", "config.ini")))

def SetSeed():
    # 设置随机种子
    setup_seed(int(config['data']['seed']))
    torch_state_seed_value = torch.initial_seed()
    print("Torch Random Seed:", torch_state_seed_value)

    rng_state = np.random.get_state()
    rng_state_seed_value = rng_state[1][0]
    print("NumPy Random Seed:", rng_state_seed_value)

    random_state = random.getstate()
    random_state_seed_value = random_state[1][0]
    print("Python Random Seed:", random_state_seed_value)

def BuildDataloader():
    # 构建 train_dataloader
    train_dataset = ALiDataset(train=True)
    train_dataloader = DataLoader(train_dataset, batch_size=128, 
                                  shuffle=True, collate_fn=collate_fn_vocab, drop_last=True)

    # 构建 test_dataloader
    test_dataset = ALiDataset(train=False)
    test_dataloader = DataLoader(test_dataset, batch_size=128, 
                                 shuffle=True, collate_fn=collate_fn_vocab, drop_last=False)
    return train_dataloader, test_dataloader


if __name__ == '__main__':

    SetSeed()
    
    train_dataloader, test_dataloader = BuildDataloader()

    # 创建保存模型文件夹
    folder_path = create_folder(os.path.join(current_dir, "model_file"))

    # 训练
    TrainNET(train_dataloader,test_dataloader, folder_path)

    # net = NET().to(device())
    # net.load_state_dict(torch.load(os.path.join(current_dir, os.path.join("model_file", os.path.join("2023-12-26_21-14-26", "NET_model_state_dict.pkl")))))
    # recall, f1, accuracy = TestNET(net, test_dataloader)

