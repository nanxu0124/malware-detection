import os
import torch
import seaborn as sns
import matplotlib.pyplot as plt
import datetime
import shutil


def device():
    if torch.cuda.is_available():
        return torch.device('cuda')
    else:
        return torch.device('cpu')
    

def plt_curve(losses, epochs):

    sns.set(style="whitegrid")
    plt.figure(figsize=(10, 5))
    sns.lineplot(x=range(epochs), y=losses, label='Training Loss', marker='o')
    plt.xlabel('Epochs')
    plt.ylabel('Loss')
    plt.title('Training and Validation Loss')
    plt.legend()
    plt.show()


def create_folder(path):
    # 获取当前日期和时间
    current_datetime = datetime.datetime.now()
    # 格式化日期和时间为字符串
    formatted_datetime = current_datetime.strftime("%Y-%m-%d_%H-%M-%S")
    
    # 创建本次训练的文件夹路径
    base_path = path
    folder_path = os.path.join(base_path, f"{formatted_datetime}")

    if not os.path.exists(folder_path):
        os.makedirs(folder_path)

    return folder_path

def model_save(folder_path, models):

    for model in models:
        # 保存模型
        model_pkl = str(model.__class__.__name__) + "_model.pkl"
        model_state_dict_pkl = str(model.__class__.__name__) + "_model_state_dict.pkl"
        torch.save(model, os.path.join(folder_path, f"{model_pkl}"))
        # 保存模型参数
        net_state_dict = model.state_dict()
        torch.save(net_state_dict, os.path.join(folder_path, f"{model_state_dict_pkl}"))


def model_info_save(folder_path, recall, f1, accuracy, configfile):

    # 更改文件名称
    new_folder_path = folder_path + '_' + f"{accuracy:.4f}"
    shutil.move(folder_path, new_folder_path)
    # 打开文件以写入数据
    info_name = "info.txt"
    with open(os.path.join(new_folder_path, f"{info_name}"), 'w') as file:
        # 将数值写入文件，每个数值占一行
        file.write('recall:' + str(recall) + '\n')
        file.write('f1:' + str(f1) + '\n')
        file.write('accuracy:' + str(accuracy) + '\n')

        configfile.write(file)
